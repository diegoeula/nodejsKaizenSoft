/**
 * [Doc Open Street (OSM) Map service](http://wiki.openstreetmap.org/wiki/Nominatim)
 */

var _ = require('underscore');

function create() {
    return _.extend({}, require('./model.json'));
}

module.exports.parseError = function (error) {
    if (error && _.isObject(error)) {
        switch (error.code) {
            case 'ENOTFOUND':
                error.message = 'Connection refused.';
                break;
        }
    }
    return error;
};

/**
 * Results
 * When the geocoder returns results, it places them within a (JSON) results array.
 * Even if the geocoder returns no results (such as if the address doesn't exist) it still returns an empty results array.
 */
module.exports.parseData = function (data) {
    var result = [];
    if (_.isObject(data) && !_.isEmpty(data)) {
        result = parse(data);
    }

    return result;
};

/**
 * Convert external data format to internal format
 */
function parse(externalHolder) {
    var internalHolder = [];
    var internal;
    if (_.isArray(externalHolder.direccionesNormalizadas)) {
        _.each(externalHolder.direccionesNormalizadas, function (external) {
            internal = convert(external);
            internalHolder.push(internal);
        });
    } else {
        internal = convert(externalHolder.direccionesNormalizadas);
        internalHolder.push(internal);
    }
    return internalHolder;
}

function convert(external) {
    var internal;

    internal = create();
    console.log(external);

    if (!_.isEmpty(external)) {

        if (external.direccion) {
            internal.display_name = external.direccion;
        }
        if (external.altura) {
            internal.house_number = external.altura;
        }
        if (external.nombre_localidad) {
            internal.suburb = external.nombre_localidad;
        }
        if (external.nombre_partido) {
            internal.city = external.nombre_partido;
        }
        if (external.tipo) {
            internal.class = external.tipo;
        }
        if (external.coordenadas) {
            internal.lat = external.coordenadas.y;
            internal.lon = external.coordenadas.x;
        
        }

    }

    return internal;
}
